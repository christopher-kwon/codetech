<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Staffs">
    <select id="staffListByStore" resultType="staff" parameterType="int">
        select u.user_id, u.user_email, f.user_name, t.status_value as user_status_value, s.created_at
        from staffs s
                 join users u on s.user_id = u.user_id
                 join user_info f on s.user_id = f.user_id
                 join user_status t on t.USER_STATUS_ID = u.USER_STATUS
        where store_id = #{store_id}
          and t.STATUS_VALUE not like '%in%'
    </select>

    <select id="staffSearchList" resultType="staff" parameterType="Map">
        select j.user_id, j.user_email, f.user_name, t.status_value as user_status_value, j.created_at
        from (select *
              from users u
              where u.user_id not in (select user_id
                                      from staffs
                                      where store_id = #{store_id})) j
                 join role r on r.role_id = j.role_id
                 join user_status t on t.user_status_id = j.user_status
                 join user_info f on f.user_id = j.user_id
        where t.status_value not like '%in%'
          and (r.role_value = 'ROLE_MEMBER'
            or r.role_value = 'ROLE_STORE_STAFF')
          and (j.user_email like #{search_val}
            or f.user_name like #{search_val})
    </select>

    <select id="isWorker" resultType="int" parameterType="Map">
        select nvl(count(*), 0)
        from staffs
        where user_id = #{user_id}
        <if test="store_id != null">
            and store_id = #{store_id}
        </if>
    </select>

    <insert id="createStaff" parameterType="map">
        <selectKey resultType="int" order="BEFORE"
                   keyProperty="staff_id">
            select nvl(max(staff_id), 0) +1 from staffs
        </selectKey>
        insert into staffs (staff_id, user_id, store_id)
        values(#{staff_id}, #{user_id}, #{store_id})
    </insert>

    <delete id="deleteStaff" parameterType="map">
        delete
        from staffs
        where user_id = #{user_id}
          and store_id = #{store_id}
    </delete>
</mapper>
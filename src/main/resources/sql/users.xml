<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="users">
    <select id="getSearchList" parameterType="map" resultType="user">


    </select>
    <select id="isEmail" parameterType="String" resultType="user">
        select *
        from users
        where user_email = #{user_email}
    </select>
    <select id="isName" parameterType="String"
            resultType="user-info">
        select *
        from user_info
        where user_name = #{user_name}
    </select>
    <insert id="userInsert" parameterType="user">
        insert into users(user_id, user_email, user_password)
        values ((select nvl(max(user_id), 0) + 1 from users), #{user_email}, #{user_password})
    </insert>
    <select id="userId" parameterType="user" resultType="int">
        select user_id
        from users
        where user_email = #{user_email}
    </select>
    <insert id="infoInsert" parameterType="user-info">
        insert into user_info
        values ((select nvl(max(user_id), 0) + 1
                 from user_info), #{user_name}, #{user_tel}, #{user_address}, #{user_profile}, #{original_file},
                #{point}, #{user_id})

    </insert>

    <select id="authIdCheck" resultType="user">
        select u.*, r.role_value as auth
        from users u
                 join role r on u.role_id = r.role_id
        where u.user_email = #{username}
    </select>

    <select id="managerName" resultType="user-info">
        select user_name, a.user_id
        from user_info a
                 join users b
                      on role_id = 2 and a.user_id = b.user_id
    </select>

    <select id="manager" resultType="user" parameterType="int">
        select *
        from users
        where user_id = #{user_id}
    </select>

    <select id="managerInfo" resultType="user-info" parameterType="int">
        select *
        from user_info
        where user_id = #{user_id}
    </select>


    <select id="userTotalInfo" parameterType="int" resultType="upi">
        select *
        from (
                 select user_email
                      , user_password
                      , user_name
                      , user_tel
                      , user_address
                      , user_profile
                      , point
                      , original_file
                 from USERS
                          left join USER_INFO
                                    on USERS.USER_ID = USER_INFO.USER_ID
                 where USERS.user_id = #{id}
             )
    </select>

    <select id="selectUsers" parameterType="String" resultType="user">
        select *
        from users
        where user_email = #{user_email}
    </select>

    
    <select id="userInfo" parameterType="int" resultType="user">
    	select * from users where user_id = #{user_id}
    </select>
    
    <update id="updatePassword" parameterType="map">
    	update users
    	set user_password = #{user_password}
    	where user_id = #{user_id}
	</update>
	
	<update id="updateUserInfo" parameterType="upi">
		update user_info
		set user_name = #{user_name}
			,user_tel = #{user_tel}
			,user_address = #{user_address}
			,user_profile = #{user_profile}
			,original_file = #{original_file}
		where user_id = #{user_id}
	</update>
	
	 <select id="reportStoreAndComment" parameterType="int" resultType="report">
    select rownum , rsc.* 
	from (	select * 
			from (
					select to_number(null) store_report_id, cmt_report_id, report_subject, report_content
					, created_at, updated_at, report_status, reporter, reported_cmt, to_number(null)reported_store           
					from COMMENT_REPORT where reporter = #{user_id}
					union all
					select store_report_id, to_number(null) cmt_report_id, report_subject, report_content
					, created_at, updated_at, report_status, reporter, to_number(null)reported_cmt, reported_store 
					from STORE_REPORT where reporter = #{user_id}
					)sc
			order by sc.created_at desc
	)rsc
    </select>
    
    <insert id="addStoreReport" parameterType="report">
    	insert into store_report
    	values((select nvl(max(store_report_id),0)+1 from store_report)
    			,#{report_subject},#{report_content},sysdate, sysdate,'1',#{reporter})
    </insert>
    
    <insert id="addCmtReport" parameterType="report">
    	insert into comment_report
    	values(select nvl(max(cmt_report_id),0)+1 from COMMENT_REPORT)
    	,#{report_subject},#{report_content},sysdate, sysdate,'1',#{reporter})
    </insert>

    <!-- for store store staff -->
    <update id="updateStaffUserStatus" parameterType="Map">
        update users
        set role_id    = (select role_id from role where role_value = #{role_value}),
            updated_at = sysdate
        where user_id = #{user_id}
    </update>
</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util
	    http://www.springframework.org/schema/util/spring-util-4.3.xsd">

    <!-- Root Context: defines shared resources visible to all other web components -->
    <util:properties id="sqlInfo" location="classpath:pro/sql.properties"/>
    <bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource"
          destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="#{sqlInfo['url']}"/>
        <property name="username" value="#{sqlInfo['username']}"/>
        <property name="password" value="#{sqlInfo['password']}"/>
    </bean>

    <bean class="org.mybatis.spring.SqlSessionFactoryBean"
          id="sqlSessionFactory">
        <property ref="dataSource" name="dataSource"/>
        <property name="configLocation"
                  value="classpath:util/SqlMapConfig.xml"/>
    </bean>

    <!-- SqlSessiontemplate은 마이바티스 스프링 연동모듈의 핵심입니다. SqlSessionTemplate는 쓰레드에
        안전하고 여러개의 DAO나 매퍼에서 공유할 수 있습니다. -->
    <bean class="org.mybatis.spring.SqlSessionTemplate"
          id="sqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory" index="0"/>
    </bean>

    <!-- Transaction Manager -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 빈의 이름이 정해져 있습니다. -->
    <!-- 파일 업로드 설정 id 값 꼭 일치 시켜야 합니다. id값을 다르게 사용하면 public String bbs_write_ok(BbsBean
        bbsbean) throws Exception{ MultipartFile uploadfile = bbsbean.getUploadfile();
        ===> NullPointerException 발생} -->
    <bean id="filterMultipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

        <!-- maxUploadSize : 한 번의 Request로 전달될 수 있는 최대의 크기를 의미합니다. name="maxUploadSize"
            를 지정하지 않으면 기본으로 "-1"이 설정되는데 파일 크기가 무제한이라는 의미입니다. 최대 업로드 가능한 바이트 크기, -1은 제한이
            없을 의미, 기본값은 -1 -->
        <!-- 1024 * 1024 * 10 bytes : 10MB -->
        <property name="maxUploadSize" value="10485760"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <bean id="bcryptPasswordEncoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
          
          

    <!-- 프로퍼티 파일을 이용해서 값을 주입하는 방법 <util:properties>를 이용해서 properties 타입의 빈으로
        만듭니다. -->
     <util:properties id="mailinfo"
        location="classpath:pro/mail.properties" /> 
    <!-- #{mailinfo['id']}} mailinfo 빈에서 키(id)의 값을 가져옵니다. -->
    	<bean id="mailSender"
            class="org.springframework.mail.javamail.JavaMailSenderImpl">
            <property name="host" value="smtp.naver.com" />
            <property name="port" value="587" />
            <property name="username" value="#{mailinfo['id']}" />
            <property name="password" value="#{mailinfo['password']}" />
            <property name="javaMailProperties">
                <props>
                    <prop key="mail.smtp.auth">true</prop>
                </props>
            </property>
        </bean> 
</beans>
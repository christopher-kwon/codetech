<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       https://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
">

    <security:http>
        <security:intercept-url pattern="/resources/**/**" access="permitAll"/>
        <security:intercept-url pattern="/auth/login" access="permitAll"/>
        <security:intercept-url pattern="/auth/loginAction" access="permitAll"/>
        <security:intercept-url pattern="/user/join" access="permitAll"/>
        <security:intercept-url pattern="/user/idCheck" access="permitAll"/>
        <security:intercept-url pattern="/user/joinProcess" access="permitAll"/>
        <security:intercept-url pattern="/order/order-read"
                                access="hasAnyRole('ROLE_STORE_OWNER', 'ROLE_STORE_STAFF')"/>
        <security:intercept-url pattern="/order/updateAction"
                                access="hasAnyRole('ROLE_STORE_OWNER', 'ROLE_STORE_STAFF')"/>
        <security:intercept-url pattern="/order/order-list-ajax"
                                access="hasAnyRole('ROLE_STORE_OWNER', 'ROLE_STORE_STAFF')"/>
        <security:intercept-url pattern="/order/order-status-ajax"
                                access="hasAnyRole('ROLE_STORE_OWNER', 'ROLE_STORE_STAFF')"/>
        <security:intercept-url pattern="/store/**" access="hasRole('ROLE_STORE_OWNER')"/>
        <security:intercept-url pattern="/menu/menu-create" access="hasRole('ROLE_STORE_OWNER')"/>
        <security:intercept-url pattern="/menu/createAction" access="hasRole('ROLE_STORE_OWNER')"/>
        <security:intercept-url pattern="/menu/menu-update" access="hasRole('ROLE_STORE_OWNER')"/>
        <security:intercept-url pattern="/menu/updateAction" access="hasRole('ROLE_STORE_OWNER')"/>
        <security:intercept-url pattern="/staff/order-list" access="hasRole('ROLE_STORE_STAFF')"/>
        <security:intercept-url pattern="/staff/**" access="hasRole('ROLE_STORE_OWNER')"/>
        <security:intercept-url pattern="/comment/user/**" access="hasRole('ROLE_MEMBER')"/>
        <security:intercept-url pattern="/comment/**" access="hasRole('ROLE_STORE_OWNER')"/>
        <security:intercept-url pattern="/user/addReport" access="isAuthenticated()"/>
        <security:intercept-url pattern="/user/**" access="isAuthenticated()"/>
        <security:intercept-url pattern="/home" access="permitAll"/>
        <security:intercept-url pattern="/" access="permitAll"/>

        <security:form-login
                login-page="/"
                login-processing-url="/auth/loginAction"
                username-parameter="login_id"
                password-parameter="login_password"
                default-target-url="/"
                authentication-success-handler-ref="customLoginSuccessHandler"
                authentication-failure-handler-ref="customLoginFailHandler"
        />
        <security:access-denied-handler ref="customAccessDeniedHandler"/>

        <security:remember-me
                user-service-ref="customUserDetailService"
                data-source-ref="dataSource"
                remember-me-parameter="remember-me"
                remember-me-cookie="remember-me"
                token-validity-seconds="2419200"
                authentication-success-handler-ref="customLoginSuccessHandler"
        />
        <security:logout
                logout-success-url="/"
                logout-url="/auth/logout"
                invalidate-session="true"
                delete-cookies="true"
        />
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="customUserDetailService">
            <security:password-encoder ref="bcryptPasswordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <context:component-scan base-package="com.codetech.www.security"/>
</beans>